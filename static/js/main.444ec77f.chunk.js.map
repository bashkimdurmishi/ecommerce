{"version":3,"sources":["UserContext.jsx","Login.jsx","Register.jsx","NoMatchPage.jsx","Order.jsx","Services.js","Dashboard.jsx","NavbarTop.jsx","Product.jsx","Store.jsx","ProductsPageAdmin.jsx","App.js","index.js"],"names":["UserContext","createContext","Login","props","useState","email","setEmail","password","setPassword","userContext","useContext","dirty","setDirty","errors","setErrors","message","setMessage","validate","errorsData","push","test","useEffect","onLoginClick","a","dirtyData","Object","keys","forEach","control","isValid","fetch","method","response","ok","json","responseBody","length","setUser","user","isLoggedIn","currentUserName","fullName","currentUserId","id","currentUserRole","role","history","replace","className","valid","style","fontSize","htmlFor","type","value","onChange","e","target","placeholder","onBlur","onClick","Register","dateOfBirth","country","gender","state","setState","countryName","countries","onRegisterClick","body","JSON","stringify","headers","name","checked","map","NoMatchPage","Order","orderId","productId","isPaymentComplete","quantity","prodName","prodPrice","rating","userId","onBuyNowClick","onDeleteClick","console","log","width","React","memo","OrdersService","brands","brandId","find","brand","categories","categoryId","category","getPreviousOrders","orders","filter","ord","getCart","getProductsByProductId","products","prod","fetchProducts","fetchOrdersByUserId","Dashboard","setOrders","showOrderDeletedAlert","setShowOrderDeletedAlert","showOrderPlacedAlert","setShowOrderPlacedAlert","loadDataFromDatabase","useCallback","ordersResponse","ordersResponseBody","productsResponse","productsResponseBody","order","product","completedOrders","currentUserOrders","window","confirm","updateOrder","orderResponse","orderResponseBody","color","productName","price","NavbarTop","to","activeClassName","exact","position","right","href","preventDefault","location","hash","Product","onAddItemToCartClick","height","margin","src","img","alt","toFixed","brandName","categoryName","Array","n","isOrdered","Store","setBrands","setCategories","setProducts","productsToShow","setProductsToShow","search","setSearch","fetchBrands","fetchCategories","getBrandByBrandId","getCategoryByCategoryId","brandsResponse","brandsResponseBody","isChecked","categoriesResponse","categoriesResponseBody","updateProductsToShow","newOrder","prods","p","autoFocus","brandsData","brd","updateBrandsIsChecked","categoriesData","ctg","updateCategoriesIsChecked","ProductsPageAdmin","App","Provider","path","component","ReactDOM","render","document","getElementById"],"mappings":"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","file":"static/js/main.444ec77f.chunk.js","sourcesContent":["import { createContext } from \"react\";\r\n\r\nexport const UserContext = createContext(\"Hi\");\r\n","import React, { useState, useEffect, useContext } from \"react\";\r\nimport { UserContext } from \"./UserContext\";\r\nexport default function Login(props) {\r\n  const [email, setEmail] = useState(\"test@mail.com\");\r\n  const [password, setPassword] = useState(\"scott123@B\");\r\n  let userContext = useContext(UserContext);\r\n  let [dirty, setDirty] = useState({\r\n    email: false,\r\n    password: false,\r\n  });\r\n\r\n  let [errors, setErrors] = useState({\r\n    email: [],\r\n    password: [],\r\n  });\r\n\r\n  let [message, setMessage] = useState(\"Hello\");\r\n  let validate = () => {\r\n    let errorsData = {};\r\n\r\n    /*Email Validation */\r\n    errorsData.email = [];\r\n\r\n    if (!email) {\r\n      errorsData.email.push(\"Email can't be blank!\");\r\n    }\r\n\r\n    const validEmailRegex =\r\n      /(^[a-zA-Z0-9_.+-]+@[a-zA-Z0-9-]+\\.[a-zA-Z0-9-.]+$)/;\r\n    if (email) {\r\n      if (!validEmailRegex.test(email)) {\r\n        errorsData.email.push(\"Proper email is expected\");\r\n      }\r\n    }\r\n    /*Email Validation */\r\n\r\n    /*Password Validation */\r\n    errorsData.password = [];\r\n\r\n    if (!password) {\r\n      errorsData.password.push(\"Password can't be blank!\");\r\n    }\r\n\r\n    const validPasswordRegex =\r\n      /(^(?=.*[a-z])(?=.*[A-Z])(?=.*\\d)(?=.*[@$!%*?&])[A-Za-z\\d@$!%*?&]{8,}$)/;\r\n    if (password) {\r\n      if (!validPasswordRegex.test(password)) {\r\n        errorsData.password.push(\r\n          \"Password must contain a minimum 8 characters, at least one uppercase letter, one lowercase letter, one number and one special character\"\r\n        );\r\n      }\r\n    }\r\n    /*Password Validation */\r\n\r\n    setErrors(errorsData);\r\n  };\r\n\r\n  useEffect(validate, [email, password]);\r\n\r\n  let onLoginClick = async () => {\r\n    let dirtyData = dirty;\r\n    Object.keys(dirty).forEach((control) => {\r\n      dirtyData[control] = true;\r\n    });\r\n    setDirty(dirtyData);\r\n\r\n    validate();\r\n\r\n    if (isValid) {\r\n      //get user from DB using credentials\r\n      let response = await fetch(\r\n        `https://api.npoint.io/2210873b5c32eb592634/users?email=${email}&password=${password}`,\r\n        { method: \"GET\" }\r\n      );\r\n\r\n      //CHange user context depending on response\r\n      if (response.ok) {\r\n        let responseBody = await response.json();\r\n        if (responseBody.length > 0) {\r\n          userContext.setUser({\r\n            ...userContext.user,\r\n            isLoggedIn: true,\r\n            currentUserName: responseBody[0].fullName,\r\n            currentUserId: responseBody[0].id,\r\n            currentUserRole: responseBody[0].role,\r\n          });\r\n\r\n          //check if user or admin and redirect\r\n          if (responseBody[0].role === \"user\") {\r\n            props.history.replace(\"/dashboard\");\r\n          } else props.history.replace(\"/products\");\r\n        }\r\n        //Handle errors\r\n        else {\r\n          setMessage(\r\n            <span className=\"text-danger\">\r\n              User not found! Please try again or register if you dont have an\r\n              account.\r\n            </span>\r\n          );\r\n        }\r\n      } else {\r\n        <span className=\"text-danger\">Unable to connect to server</span>;\r\n      }\r\n    }\r\n  };\r\n\r\n  //check if login form is valid\r\n  let isValid = () => {\r\n    let valid = true;\r\n    for (let control in errors) {\r\n      if (errors[control].length > 0) {\r\n        valid = false;\r\n      }\r\n    }\r\n\r\n    return valid;\r\n  };\r\n  return (\r\n    <div className=\"row\">\r\n      <div className=\"col-lg-5 col-md-7 mx-auto\">\r\n        <div className=\"card border-success shadow-lg my-2\">\r\n          <div className=\"card-header border-bottom border-success\">\r\n            <h4\r\n              style={{ fontSize: \"40px\" }}\r\n              className=\"text-warning text-center\"\r\n            >\r\n              Login\r\n            </h4>\r\n          </div>\r\n\r\n          {/*Login form starts*/}\r\n          <div className=\"card-body border-bottom border-success\">\r\n            {/*Get and validate email*/}\r\n            <div className=\"form-group\">\r\n              <label htmlFor=\"email\">Email</label>\r\n              <input\r\n                type=\"text\"\r\n                className=\"form-control\"\r\n                value={email}\r\n                onChange={(e) => setEmail(e.target.value)}\r\n                id=\"email\"\r\n                placeholder=\"Email...\"\r\n                onBlur={(e) => {\r\n                  setDirty({ ...dirty, email: true });\r\n                  validate();\r\n                }}\r\n              />\r\n              <div className=\"text-danger\">\r\n                {dirty[\"email\"] && errors[\"email\"][0] ? errors[\"email\"] : \"\"}\r\n              </div>\r\n            </div>\r\n\r\n            {/*Get and validate password*/}\r\n            <div className=\"form-group\">\r\n              <label htmlFor=\"password\">Password</label>\r\n              <input\r\n                type=\"password\"\r\n                className=\"form-control\"\r\n                value={password}\r\n                onChange={(e) => setPassword(e.target.value)}\r\n                id=\"password\"\r\n                placeholder=\"Password...\"\r\n                onBlur={(e) => {\r\n                  setDirty({ ...dirty, password: true });\r\n                  validate();\r\n                }}\r\n              />\r\n              <div className=\"text-danger\">\r\n                {dirty[\"password\"] && errors[\"password\"][0]\r\n                  ? errors[\"password\"]\r\n                  : \"\"}\r\n              </div>\r\n            </div>\r\n          </div>\r\n\r\n          <div className=\"card-footer text-center\">\r\n            <div className=\"m-1\">{message}</div>\r\n            <button\r\n              className=\"btn btn-warning text-light m-2\"\r\n              onClick={onLoginClick}\r\n            >\r\n              Login\r\n            </button>\r\n          </div>\r\n        </div>\r\n      </div>\r\n    </div>\r\n  );\r\n}\r\n","import React, { useState, useEffect, useContext } from \"react\";\r\nimport { UserContext } from \"./UserContext\";\r\n\r\nexport default function Register(props) {\r\n  let [state, setState] = useState({\r\n    email: \"\",\r\n    password: \"\",\r\n    fullName: \"\",\r\n    dateOfBirth: \"\",\r\n    country: \"\",\r\n    gender: \"\",\r\n  });\r\n\r\n  let [errors, setErrors] = useState({\r\n    email: [],\r\n    password: [],\r\n    fullName: [],\r\n    dateOfBirth: [],\r\n    country: [],\r\n    gender: [],\r\n  });\r\n  let [dirty, setDirty] = useState({\r\n    email: false,\r\n    password: false,\r\n    fullName: false,\r\n    dateOfBirth: false,\r\n    country: false,\r\n    gender: false,\r\n  });\r\n\r\n  const [countries] = useState([\r\n    { id: 1, countryName: \"USA\" },\r\n    { id: 2, countryName: \"Japan\" },\r\n    { id: 3, countryName: \"India\" },\r\n    { id: 4, countryName: \"Albania\" },\r\n    { id: 5, countryName: \"UK\" },\r\n    { id: 6, countryName: \"France\" },\r\n    { id: 7, countryName: \"Italy\" },\r\n  ]);\r\n\r\n  let [message, setMessage] = useState(\"\");\r\n  let userContext = useContext(UserContext);\r\n  let validate = () => {\r\n    let errorsData = [];\r\n\r\n    /*Email Validation */\r\n    errorsData.email = [];\r\n\r\n    if (!state.email) {\r\n      errorsData.email.push(\"Email can't be blank!\");\r\n    }\r\n\r\n    const validEmailRegex =\r\n      /(^[a-zA-Z0-9_.+-]+@[a-zA-Z0-9-]+\\.[a-zA-Z0-9-.]+$)/;\r\n    if (state.email) {\r\n      if (!validEmailRegex.test(state.email)) {\r\n        errorsData.email.push(\"Proper email is expected\");\r\n      }\r\n    }\r\n    /*Email Validation */\r\n\r\n    /*Password Validation */\r\n    errorsData.password = [];\r\n\r\n    if (!state.password) {\r\n      errorsData.password.push(\"Password can't be blank!\");\r\n    }\r\n\r\n    const validPasswordRegex =\r\n      /(^(?=.*[a-z])(?=.*[A-Z])(?=.*\\d)(?=.*[@$!%*?&])[A-Za-z\\d@$!%*?&]{8,}$)/;\r\n    if (state.password) {\r\n      if (!validPasswordRegex.test(state.password)) {\r\n        errorsData.password.push(\r\n          \"Password must contain a minimum 8 characters, at least one uppercase letter, one lowercase letter, one number and one special character\"\r\n        );\r\n      }\r\n    }\r\n    /*Password Validation */\r\n\r\n    /*other Validations */\r\n    errorsData.fullName = [];\r\n    if (!state.fullName) {\r\n      errorsData.fullName.push(\"Name can't be blank!\");\r\n    }\r\n\r\n    //gender\r\n    errorsData.gender = [];\r\n    if (!state.gender) {\r\n      errorsData.gender.push(\"Gender can't be blank!\");\r\n    }\r\n\r\n    //country\r\n    errorsData.country = [];\r\n    if (!state.country) {\r\n      errorsData.country.push(\"Country can't be blank!\");\r\n    }\r\n\r\n    //date of birth\r\n    errorsData.dateOfBirth = [];\r\n    if (!state.dateOfBirth) {\r\n      errorsData.dateOfBirth.push(\"Date of birth can't be blank!\");\r\n    }\r\n\r\n    setErrors(errorsData);\r\n  };\r\n\r\n  useEffect(validate, [state]);\r\n\r\n  let onRegisterClick = async () => {\r\n    let dirtyData = dirty;\r\n    Object.keys(dirty).forEach((control) => {\r\n      dirtyData[control] = true;\r\n    });\r\n\r\n    setDirty(dirtyData);\r\n    validate();\r\n\r\n    if (isValid()) {\r\n      let response = await fetch(\r\n        \"https://api.npoint.io/2210873b5c32eb592634/users\",\r\n        {\r\n          method: \"POST\",\r\n          body: JSON.stringify({\r\n            email: state.email,\r\n            password: state.password,\r\n            fullName: state.fullName,\r\n            dateOfBirth: state.dateOfBirth,\r\n            gender: state.gender,\r\n            country: state.country,\r\n            role: \"user\",\r\n          }),\r\n          headers: {\r\n            \"Content-type\": \"application/json\",\r\n          },\r\n        }\r\n      );\r\n      if (response.ok) {\r\n        let responseBody = await response.json();\r\n        userContext.setUser({\r\n          ...userContext.user,\r\n          isLoggedIn: true,\r\n          currentUserName: responseBody.fullName,\r\n          currentUserId: responseBody.id,\r\n          currentUserRole: responseBody.role,\r\n        });\r\n        setMessage(<span className=\"text-success\">Success</span>);\r\n        props.history.replace(\"/dashboard\");\r\n      }\r\n    } else {\r\n      setMessage(<span className=\"text-danger\">Error</span>);\r\n    }\r\n  };\r\n\r\n  let isValid = () => {\r\n    let valid = true;\r\n\r\n    for (let control in errors) {\r\n      if (errors[control].length > 0) {\r\n        valid = false;\r\n      }\r\n    }\r\n    return valid;\r\n  };\r\n  return (\r\n    <div className=\"col-lg-4 mx-auto\">\r\n      <div className=\"card border-primary shadow my-2\">\r\n        <div className=\"card-header border-bottom border-primary\">\r\n          <h4\r\n            className=\"text-center text-warning my-3\"\r\n            style={{ fontSize: \"40px\" }}\r\n          >\r\n            Register\r\n          </h4>\r\n          {/*<ul className=\"text-danger\">\r\n            {Object.keys(errors).map((control) => {\r\n              if (dirty[control]) {\r\n                return errors[control].map((err) => {\r\n                  return <li key={err}>{err}</li>;\r\n                });\r\n              } else {\r\n                return \"\";\r\n              }\r\n            })}\r\n          </ul>*/}\r\n        </div>\r\n\r\n        <div className=\"card-body border-bottom border-primary\">\r\n          {/*email*/}\r\n          <div\r\n            className=\"form-group row align-items-center my-1\"\r\n            htmlFor=\"email\"\r\n          >\r\n            <div className=\"col-lg-4 \">\r\n              <label>Email</label>\r\n            </div>\r\n            <div className=\"col-lg-8\">\r\n              <input\r\n                type=\"text\"\r\n                className=\"form-control\"\r\n                name=\"email\"\r\n                id=\"email\"\r\n                value={state.email}\r\n                onChange={(e) =>\r\n                  setState({ ...state, [e.target.name]: e.target.value })\r\n                }\r\n                onBlur={(e) => {\r\n                  setDirty({ ...dirty, [e.target.name]: true });\r\n                  validate();\r\n                }}\r\n              />\r\n              <div className=\"text-danger\">\r\n                {dirty[\"email\"] && errors[\"email\"][0] ? errors[\"email\"] : \"\"}\r\n              </div>\r\n            </div>\r\n          </div>\r\n          {/*email ends*/}\r\n\r\n          {/*password*/}\r\n          <div\r\n            className=\"form-group row align-items-center my-1\"\r\n            htmlFor=\"password\"\r\n          >\r\n            <div className=\"col-lg-4\">\r\n              <label>Password</label>\r\n            </div>\r\n            <div className=\"col-lg-8\">\r\n              <input\r\n                type=\"password\"\r\n                className=\"form-control\"\r\n                name=\"password\"\r\n                value={state.password}\r\n                onChange={(e) =>\r\n                  setState({ ...state, [e.target.name]: e.target.value })\r\n                }\r\n                onBlur={(e) => {\r\n                  setDirty({ ...dirty, [e.target.name]: true });\r\n                  validate();\r\n                }}\r\n              />\r\n              <div className=\"text-danger\">\r\n                {dirty[\"password\"] && errors[\"password\"][0]\r\n                  ? errors[\"password\"]\r\n                  : \"\"}\r\n              </div>\r\n            </div>\r\n          </div>\r\n          {/*password ends*/}\r\n\r\n          {/*fullName*/}\r\n          <div\r\n            className=\"form-group row align-items-center my-1\"\r\n            htmlFor=\"fullName\"\r\n          >\r\n            <div className=\"col-lg-4\">\r\n              <label>Full Name</label>\r\n            </div>\r\n            <div className=\"col-lg-8\">\r\n              <input\r\n                type=\"text\"\r\n                className=\"form-control\"\r\n                name=\"fullName\"\r\n                id=\"fullName\"\r\n                value={state.fullName}\r\n                onChange={(e) =>\r\n                  setState({ ...state, [e.target.name]: e.target.value })\r\n                }\r\n                onBlur={(e) => {\r\n                  setDirty({ ...dirty, [e.target.name]: true });\r\n                  validate();\r\n                }}\r\n              />\r\n              <div className=\"text-danger\">\r\n                {dirty[\"fullName\"] && errors[\"fullName\"][0]\r\n                  ? errors[\"fullName\"]\r\n                  : \"\"}\r\n              </div>\r\n            </div>\r\n          </div>\r\n          {/*fullName ends*/}\r\n\r\n          {/*dateOfBirth*/}\r\n          <div\r\n            className=\"form-group row align-items-center my-1\"\r\n            htmlFor=\"dateOfBirth\"\r\n          >\r\n            <div className=\"col-lg-4\">\r\n              <label>Date of birth</label>\r\n            </div>\r\n            <div className=\"col-lg-8\">\r\n              <input\r\n                type=\"date\"\r\n                className=\"form-control\"\r\n                name=\"dateOfBirth\"\r\n                id=\"dateOfBirth\"\r\n                value={state.dateOfBirth}\r\n                onChange={(e) =>\r\n                  setState({ ...state, [e.target.name]: e.target.value })\r\n                }\r\n                onBlur={(e) => {\r\n                  setDirty({ ...dirty, [e.target.name]: true });\r\n                  validate();\r\n                }}\r\n              />\r\n              <div className=\"text-danger\">\r\n                {dirty[\"dateOfBirth\"] && errors[\"dateOfBirth\"][0]\r\n                  ? errors[\"dateOfBirth\"]\r\n                  : \"\"}\r\n              </div>\r\n            </div>\r\n          </div>\r\n          {/*dateOfBirth ends*/}\r\n\r\n          {/*gender*/}\r\n          <div className=\"form-group row align-items-center my-1\">\r\n            <div className=\"col-lg-4\">\r\n              <label>Gender</label>\r\n            </div>\r\n            <div className=\"col-lg-8\">\r\n              <div className=\"form-check\">\r\n                <input\r\n                  type=\"radio\"\r\n                  name=\"gender\"\r\n                  value=\"male\"\r\n                  id=\"male\"\r\n                  className=\"form-check-input\"\r\n                  checked={state.gender === \"male\" ? true : false}\r\n                  onChange={(e) =>\r\n                    setState({ ...state, [e.target.name]: e.target.value })\r\n                  }\r\n                  onBlur={(e) => {\r\n                    setDirty({ ...dirty, [e.target.name]: true });\r\n                    validate();\r\n                  }}\r\n                />\r\n                <label htmlFor=\"male\" className=\"form-check-inline\">\r\n                  Male\r\n                </label>\r\n              </div>\r\n\r\n              <div className=\"form-check\">\r\n                <input\r\n                  type=\"radio\"\r\n                  name=\"gender\"\r\n                  value=\"female\"\r\n                  id=\"female\"\r\n                  className=\"form-check-input\"\r\n                  checked={state.gender === \"female\" ? true : false}\r\n                  onChange={(e) =>\r\n                    setState({ ...state, [e.target.name]: e.target.value })\r\n                  }\r\n                  onBlur={(e) => {\r\n                    setDirty({ ...dirty, [e.target.name]: true });\r\n                    validate();\r\n                  }}\r\n                />\r\n                <label htmlFor=\"female\" className=\"form-check-inline\">\r\n                  Female\r\n                </label>\r\n              </div>\r\n              <div className=\"text-danger\">\r\n                {dirty[\"gender\"] && errors[\"gender\"][0] ? errors[\"gender\"] : \"\"}\r\n              </div>\r\n            </div>\r\n          </div>\r\n          {/*gender ends*/}\r\n\r\n          {/*country*/}\r\n          <div\r\n            className=\"form-group row align-items-center my-1\"\r\n            htmlFor=\"dateOfBirth\"\r\n          >\r\n            <div className=\"col-lg-4 \">\r\n              <label>Country</label>\r\n            </div>\r\n            <div className=\"col-lg-8\">\r\n              <select\r\n                type=\"date\"\r\n                className=\"form-control\"\r\n                name=\"country\"\r\n                id=\"country\"\r\n                value={state.country}\r\n                onChange={(e) =>\r\n                  setState({ ...state, [e.target.name]: e.target.value })\r\n                }\r\n                onBlur={(e) => {\r\n                  setDirty({ ...dirty, [e.target.name]: true });\r\n                  validate();\r\n                }}\r\n              >\r\n                <option value=\"\">--Select Country--</option>\r\n                {countries.map((country) => (\r\n                  <option key={country.id} value={country.id}>\r\n                    {country.countryName}\r\n                  </option>\r\n                ))}\r\n              </select>\r\n              <div className=\"text-danger\">\r\n                {dirty[\"country\"] && errors[\"country\"][0]\r\n                  ? errors[\"country\"]\r\n                  : \"\"}\r\n              </div>\r\n            </div>\r\n          </div>\r\n          {/*country ends*/}\r\n        </div>\r\n        <div className=\"card-footer text-center\">\r\n          <div className=\"m-1\">{message}</div>\r\n          <div>\r\n            <button\r\n              className=\"btn btn-warning text-light m-2\"\r\n              onClick={onRegisterClick}\r\n            >\r\n              Register\r\n            </button>\r\n          </div>\r\n        </div>\r\n      </div>\r\n    </div>\r\n  );\r\n}\r\n","import React from \"react\";\r\n\r\nexport default function NoMatchPage() {\r\n  return (\r\n    <div>\r\n      <h1>No match found...</h1>\r\n    </div>\r\n  );\r\n}\r\n","import React from \"react\";\r\n\r\nfunction Order({\r\n  orderId,\r\n  productId,\r\n  isPaymentComplete,\r\n  quantity,\r\n  prodName,\r\n  prodPrice,\r\n  rating,\r\n  userId,\r\n  onBuyNowClick,\r\n  onDeleteClick,\r\n}) {\r\n  console.log(\"Order rendered\", prodName);\r\n  return (\r\n    <div className=\"card my-2 shadow\">\r\n      <div className=\"card-body\">\r\n        <h6>\r\n          <i className=\"fa fa-arrow-right\"></i> {prodName}\r\n          {!isPaymentComplete ? (\r\n            <div className=\"float-end\">\r\n              <button\r\n                className=\"btn btn-sm btn-info ms-2 text-light\"\r\n                onClick={() =>\r\n                  onBuyNowClick(orderId, userId, productId, quantity, prodPrice)\r\n                }\r\n              >\r\n                <i className=\"fa fa-truck\"></i> Buy Now\r\n              </button>\r\n              <button\r\n                className=\"btn btn-sm btn-danger ms-2 text-light\"\r\n                onClick={() => onDeleteClick(orderId)}\r\n              >\r\n                <i className=\"fa fa-trash-o\"></i> Delete\r\n              </button>\r\n            </div>\r\n          ) : null}\r\n        </h6>\r\n        <table className=\"table table-sm table-borderless mt-1\">\r\n          <tbody>\r\n            <tr>\r\n              <td style={{ width: \"100px\" }}> Quantity:</td>\r\n              <td>{quantity}</td>\r\n            </tr>\r\n            <tr>\r\n              <td style={{ width: \"100px\" }}> Price:</td>\r\n              <td>$ {prodPrice}</td>\r\n            </tr>\r\n            <tr>\r\n              <td style={{ width: \"100px\" }}> Rating:</td>\r\n              <td>{rating}</td>\r\n            </tr>\r\n          </tbody>\r\n        </table>\r\n      </div>\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default React.memo(Order);\r\n","export const OrdersService = {\r\n  getPreviousOrders: (orders) => {\r\n    return orders.filter((ord) => ord.isPaymentComplete === true);\r\n  },\r\n\r\n  getCart: (orders) => {\r\n    return orders.filter((ord) => ord.isPaymentComplete === false);\r\n  },\r\n\r\n  getProductsByProductId: (products, productId) => {\r\n    return products.find((prod) => prod.id === productId);\r\n  },\r\n\r\n  fetchProducts: () => {\r\n    return fetch(\"https://api.npoint.io/2210873b5c32eb592634/products\", {\r\n      method: \"GET\",\r\n    });\r\n  },\r\n\r\n  fetchOrdersByUserId: (userId) => {\r\n    return fetch(\r\n      `https://api.npoint.io/2210873b5c32eb592634/orders?userId=${userId}`,\r\n      {\r\n        method: \"GET\",\r\n      }\r\n    );\r\n  },\r\n\r\n  fetchBrands: () => {\r\n    return fetch(`https://api.npoint.io/2210873b5c32eb592634/brands`, {\r\n      method: \"GET\",\r\n    });\r\n  },\r\n\r\n  fetchCategories: () => {\r\n    return fetch(`https://api.npoint.io/2210873b5c32eb592634/categories`, {\r\n      method: \"GET\",\r\n    });\r\n  },\r\n\r\n  getBrandByBrandId: (brands, brandId) => {\r\n    return brands.find((brand) => brand.id === brandId);\r\n  },\r\n\r\n  getCategoryByCategoryId: (categories, categoryId) => {\r\n    return categories.find((category) => category.id === categoryId);\r\n  },\r\n};\r\n","import React, { useState, useContext, useEffect, useCallback } from \"react\";\r\nimport { UserContext } from \"./UserContext\";\r\nimport Order from \"./Order\";\r\nimport { OrdersService } from \"./Services\";\r\n\r\nlet {\r\n  getPreviousOrders,\r\n  getCart,\r\n  getProductsByProductId,\r\n  fetchProducts,\r\n  fetchOrdersByUserId,\r\n} = OrdersService;\r\n\r\nexport default function Dashboard() {\r\n  let userContext = useContext(UserContext);\r\n  let [orders, setOrders] = useState([]);\r\n  let [showOrderDeletedAlert, setShowOrderDeletedAlert] = useState(false);\r\n  let [showOrderPlacedAlert, setShowOrderPlacedAlert] = useState(false);\r\n\r\n  let loadDataFromDatabase = useCallback(async () => {\r\n    let ordersResponse = await fetchOrdersByUserId(\r\n      userContext.user.currentUserId\r\n    );\r\n\r\n    if (ordersResponse.ok) {\r\n      let ordersResponseBody = await ordersResponse.json();\r\n\r\n      let productsResponse = await fetchProducts();\r\n\r\n      if (productsResponse.ok) {\r\n        let productsResponseBody = await productsResponse.json();\r\n\r\n        ordersResponseBody.forEach((order) => {\r\n          order.product = getProductsByProductId(\r\n            productsResponseBody,\r\n            order.productId\r\n          );\r\n        });\r\n        setOrders(ordersResponseBody);\r\n        let completedOrders = ordersResponseBody.filter(\r\n          (ord) => ord.isPaymentComplete === false\r\n        );\r\n        userContext.setUser({\r\n          ...userContext.user,\r\n          currentUserOrders: completedOrders.length,\r\n        });\r\n      }\r\n    }\r\n  }, [userContext.user.currentUserId]);\r\n\r\n  useEffect(() => {\r\n    loadDataFromDatabase();\r\n  }, [userContext.user.currentUserId, loadDataFromDatabase]);\r\n\r\n  //When user clicks on Buy Now\r\n  const onBuyNowClick = useCallback(\r\n    async (orderId, userId, productId, quantity, value) => {\r\n      if (window.confirm(\"Do you want to place order for this product?\")) {\r\n        let updateOrder = {\r\n          id: orderId,\r\n          productId: productId,\r\n          userId: userId,\r\n          quantity: quantity,\r\n          isPaymentComplete: true,\r\n        };\r\n        let orderResponse = await fetch(\r\n          `http://localhost:5000/orders/${orderId}`,\r\n          {\r\n            method: \"PUT\",\r\n            body: JSON.stringify(updateOrder),\r\n            headers: { \"Content-type\": \"application/json\" },\r\n          }\r\n        );\r\n        let orderResponseBody = await orderResponse.json();\r\n\r\n        if (orderResponse.ok) {\r\n          console.log(\"order body\", orderResponseBody);\r\n          loadDataFromDatabase();\r\n          setShowOrderPlacedAlert(true);\r\n        }\r\n      }\r\n    },\r\n    [loadDataFromDatabase]\r\n  );\r\n\r\n  //When user clicks on Delete button\r\n  const onDeleteClick = useCallback(\r\n    async (orderId) => {\r\n      if (window.confirm(\"Are you sure you want to delete this item?\")) {\r\n        let orderResponse = await fetch(\r\n          `http://localhost:5000/orders/${orderId}`,\r\n          { method: \"DELETE\" }\r\n        );\r\n\r\n        if (orderResponse.ok) {\r\n          let orderResponseBody = await orderResponse.json();\r\n          console.log(orderResponseBody);\r\n          loadDataFromDatabase();\r\n          setShowOrderDeletedAlert(true);\r\n        }\r\n      }\r\n    },\r\n    [loadDataFromDatabase]\r\n  );\r\n\r\n  return (\r\n    <div className=\"row\">\r\n      <div className=\"col-12 py-3 header\">\r\n        <h4 style={{ color: \"#a80000\" }}>\r\n          <i className=\"fa fa-dashboard\"></i>Dashboard{\" \"}\r\n          <button\r\n            className=\"btn btn-sm btn-info bg-warning text-light\"\r\n            onClick={loadDataFromDatabase}\r\n          >\r\n            <i className=\"fa fa-refresh\"></i> Refresh\r\n          </button>\r\n        </h4>\r\n      </div>\r\n\r\n      <div className=\"col-12\">\r\n        <div className=\"row\">\r\n          {/*previous orders*/}\r\n          <div className=\"col-6\">\r\n            <h4 className=\"py-2 my-2 text-info  text-warning border-bottom border-info\">\r\n              <i className=\"fa fa-history\"></i> Previous Orders{\" \"}\r\n              <span className=\"badge bg-warning\">\r\n                {getPreviousOrders(orders).length}\r\n              </span>\r\n            </h4>\r\n\r\n            {getPreviousOrders(orders).length === 0 ? (\r\n              <div className=\"text-danger\">No Previous Orders</div>\r\n            ) : null}\r\n\r\n            {getPreviousOrders(orders).map((ord) => {\r\n              return (\r\n                <Order\r\n                  key={ord.id}\r\n                  orderId={ord.id}\r\n                  productId={ord.productId}\r\n                  isPaymentComplete={ord.isPaymentComplete}\r\n                  quantity={ord.quantity}\r\n                  prodName={ord.product.productName}\r\n                  prodPrice={ord.product.price}\r\n                  rating={ord.product.rating}\r\n                  userId={userContext.user.currentUserId}\r\n                />\r\n              );\r\n            })}\r\n          </div>\r\n\r\n          {/*Cart*/}\r\n          <div className=\"col-6\">\r\n            <h4 className=\"py-2 my-2 text-primary border-bottom text-warning border-info\">\r\n              <i className=\"fa fa-shopping-cart\"></i> Cart{\" \"}\r\n              <span className=\"badge bg-danger\">{getCart(orders).length}</span>\r\n            </h4>\r\n\r\n            {/*Order Placed Alert*/}\r\n            {showOrderPlacedAlert && (\r\n              <div\r\n                className=\"alert alert-success alert-dismissible fade show\"\r\n                role=\"alert\"\r\n              >\r\n                Your order has been placed.\r\n                <button\r\n                  type=\"button\"\r\n                  className=\"btn-close\"\r\n                  data-bs-dismiss=\"alert\"\r\n                  aria-label=\"Close\"\r\n                  onClick={() => setShowOrderPlacedAlert(false)}\r\n                ></button>\r\n              </div>\r\n            )}\r\n\r\n            {/*Order Deleted Alert*/}\r\n            {showOrderDeletedAlert && (\r\n              <div\r\n                className=\"alert alert-danger alert-dismissible fade show\"\r\n                role=\"alert\"\r\n              >\r\n                Your order has been deleted.\r\n                <button\r\n                  type=\"button\"\r\n                  className=\"btn-close\"\r\n                  data-bs-dismiss=\"alert\"\r\n                  aria-label=\"Close\"\r\n                  onClick={() => setShowOrderDeletedAlert(false)}\r\n                ></button>\r\n              </div>\r\n            )}\r\n\r\n            {getCart(orders).length === 0 ? (\r\n              <div className=\"text-danger\">No Previous Orders</div>\r\n            ) : null}\r\n\r\n            {getCart(orders).map((ord) => {\r\n              return (\r\n                <Order\r\n                  key={ord.id}\r\n                  orderId={ord.id}\r\n                  productId={ord.productId}\r\n                  isPaymentComplete={ord.isPaymentComplete}\r\n                  quantity={ord.quantity}\r\n                  prodName={ord.product.productName}\r\n                  prodPrice={ord.product.price}\r\n                  rating={ord.product.rating}\r\n                  userId={userContext.user.currentUserId}\r\n                  onBuyNowClick={onBuyNowClick}\r\n                  onDeleteClick={onDeleteClick}\r\n                />\r\n              );\r\n            })}\r\n          </div>\r\n        </div>\r\n      </div>\r\n    </div>\r\n  );\r\n}\r\n","import React, { useContext } from \"react\";\r\nimport { UserContext } from \"./UserContext\";\r\nimport { NavLink } from \"react-router-dom\";\r\n\r\nexport default function NavbarTop() {\r\n  let userContext = useContext(UserContext);\r\n\r\n  let onLogoutClick = (e) => {\r\n    e.preventDefault();\r\n    userContext.setUser({\r\n      isLoggedIn: false,\r\n      currentUserName: null,\r\n      currentUserId: null,\r\n      currentUserOrders: 0,\r\n      currentUserRole: null,\r\n    });\r\n\r\n    window.location.hash = \"/\";\r\n  };\r\n  return (\r\n    <nav className=\"navbar navbar-expand-lg navbar-dark bg-dark\">\r\n      <div className=\"container-fluid\">\r\n        <NavLink className=\"navbar-brand\" to=\"#\">\r\n          eCommerce\r\n        </NavLink>\r\n        <button\r\n          className=\"navbar-toggler\"\r\n          type=\"button\"\r\n          data-bs-toggle=\"collapse\"\r\n          data-bs-target=\"#navbarSupportedContent\"\r\n          aria-controls=\"navbarSupportedContent\"\r\n          aria-expanded=\"false\"\r\n          aria-label=\"Toggle navigation\"\r\n        >\r\n          <span className=\"navbar-toggler-icon\"></span>\r\n        </button>\r\n        <div className=\"collapse navbar-collapse\" id=\"navbarSupportedContent\">\r\n          <ul className=\"navbar-nav me-auto mb-2 mb-lg-0\">\r\n            {userContext.user.isLoggedIn &&\r\n            userContext.user.currentUserRole === \"user\" ? (\r\n              <>\r\n                <li className=\"nav-item\">\r\n                  <NavLink\r\n                    className=\"nav-link position-relative\"\r\n                    aria-current=\"page\"\r\n                    to=\"/dashboard\"\r\n                    activeClassName=\"active\"\r\n                  >\r\n                    <i className=\"fa fa-dashboard\"></i> Dashboard\r\n                    <span className=\"order-number position-absolute top-10 start-100 translate-middle badge rounded-pill bg-danger \">\r\n                      {userContext.user.currentUserOrders}\r\n                    </span>\r\n                  </NavLink>\r\n                </li>\r\n                <li className=\"nav-item ms-3\">\r\n                  <NavLink\r\n                    className=\"nav-link\"\r\n                    aria-current=\"page\"\r\n                    to=\"/store\"\r\n                    activeClassName=\"active\"\r\n                  >\r\n                    <i className=\"fa fa-shopping-bag\"></i> Store\r\n                  </NavLink>\r\n                </li>\r\n              </>\r\n            ) : userContext.user.isLoggedIn &&\r\n              userContext.user.currentUserRole === \"admin\" ? (\r\n              <li className=\"nav-item\">\r\n                <NavLink\r\n                  className=\"nav-link\"\r\n                  aria-current=\"page\"\r\n                  to=\"/products\"\r\n                  exact={true}\r\n                  activeClassName=\"active\"\r\n                >\r\n                  <i className=\"fa fa-shopping-bag\"></i> Products\r\n                </NavLink>\r\n              </li>\r\n            ) : (\r\n              <>\r\n                <li className=\"nav-item\">\r\n                  <NavLink\r\n                    className=\"nav-link\"\r\n                    aria-current=\"page\"\r\n                    to=\"/\"\r\n                    exact={true}\r\n                    activeClassName=\"active\"\r\n                  >\r\n                    Login\r\n                  </NavLink>\r\n                </li>\r\n                <li className=\"nav-item\">\r\n                  <NavLink\r\n                    className=\"nav-link\"\r\n                    aria-current=\"page\"\r\n                    to=\"/register\"\r\n                    activeClassName=\"active\"\r\n                  >\r\n                    Register\r\n                  </NavLink>\r\n                </li>\r\n              </>\r\n            )}\r\n\r\n            <div style={{ position: \"absolute\", right: 70 }}>\r\n              <ul className=\"navbar-nav\">\r\n                {userContext.user.isLoggedIn ? (\r\n                  <li className=\"nav-item dropdown\">\r\n                    <a\r\n                      className=\"nav-link dropdown-toggle\"\r\n                      href=\"/#\"\r\n                      id=\"navbarDropdown\"\r\n                      role=\"button\"\r\n                      data-bs-toggle=\"dropdown\"\r\n                      aria-expanded=\"false\"\r\n                    >\r\n                      <i className=\"fa fa-user-circle\">\r\n                        {userContext.user.currentUserName}\r\n                      </i>\r\n                    </a>\r\n                    <ul\r\n                      className=\"dropdown-menu\"\r\n                      aria-labelledby=\"navbarDropdown\"\r\n                    >\r\n                      <li>\r\n                        <a\r\n                          className=\"dropdown-item\"\r\n                          href=\"/#\"\r\n                          onClick={onLogoutClick}\r\n                        >\r\n                          Logout\r\n                        </a>\r\n                      </li>\r\n                    </ul>\r\n                  </li>\r\n                ) : null}\r\n              </ul>\r\n            </div>\r\n          </ul>\r\n        </div>\r\n      </div>\r\n    </nav>\r\n  );\r\n}\r\n","import React from \"react\";\r\n\r\nconst Product = ({ product, onAddItemToCartClick }) => {\r\n  return (\r\n    <div className=\"col-lg-6\">\r\n      <div className=\"card m-1\">\r\n        <div className=\"card-body\">\r\n          <div className=\"row\">\r\n            <img\r\n              className=\"col-lg-12 my-auto\"\r\n              style={{ height: \"300px\", width: \"auto\", margin: \"auto\" }}\r\n              src={product.img}\r\n              alt=\"none\"\r\n            />\r\n            <div className=\"col-lg-9 info\">\r\n              <h5>\r\n                <i className=\"fa fa-arrow-right\"></i> {product.productName}\r\n              </h5>\r\n              <div>${product.price.toFixed(2)}</div>\r\n              <div className=\"mt-2\">\r\n                #{product.brand.brandName} #{product.category.categoryName}\r\n              </div>\r\n              <div>\r\n                {[...Array(product.rating).keys()].map((n) => {\r\n                  return <i className=\"fa fa-star text-warning\" key={n}></i>;\r\n                })}\r\n                {[...Array(5 - product.rating).keys()].map((n) => {\r\n                  return <i className=\"fa fa-star-o text-warning\" key={n}></i>;\r\n                })}\r\n              </div>\r\n\r\n              <div className=\"float-end\">\r\n                {product.isOrdered ? (\r\n                  <span className=\"text-primary\">Added to Cart!</span>\r\n                ) : (\r\n                  <button\r\n                    className=\"btn btn-sm btn-primary\"\r\n                    onClick={() => onAddItemToCartClick(product)}\r\n                  >\r\n                    <i className=\"fa fa-cart-plus\"></i> Add to Cart\r\n                  </button>\r\n                )}\r\n              </div>\r\n            </div>\r\n          </div>\r\n        </div>\r\n      </div>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default Product;\r\n","import React, { useState, useEffect, useContext, useCallback } from \"react\";\r\nimport { UserContext } from \"./UserContext\";\r\nimport { OrdersService } from \"./Services\";\r\nimport Product from \"./Product\";\r\n\r\nfunction Store() {\r\n  let userContext = useContext(UserContext);\r\n  let [brands, setBrands] = useState(null);\r\n  let [categories, setCategories] = useState(null);\r\n  let [products, setProducts] = useState(null);\r\n  let [productsToShow, setProductsToShow] = useState(null);\r\n  let [search, setSearch] = useState(\"\");\r\n\r\n  //get Sevices\r\n  let {\r\n    fetchBrands,\r\n    fetchCategories,\r\n    fetchProducts,\r\n    getBrandByBrandId,\r\n    getCategoryByCategoryId,\r\n  } = OrdersService;\r\n\r\n  //Attaches brands and categories to each product\r\n  useEffect(\r\n    () =>\r\n      (async () => {\r\n        //Fetch Brands From DB\r\n        let brandsResponse = await fetchBrands();\r\n        let brandsResponseBody = await brandsResponse.json();\r\n        brandsResponseBody.forEach((brand) => {\r\n          brand.isChecked = true;\r\n        });\r\n        setBrands(brandsResponseBody);\r\n        console.log(\"brands are\", brandsResponseBody);\r\n\r\n        //Fetch Categories from DB\r\n        let categoriesResponse = await fetchCategories();\r\n        let categoriesResponseBody = await categoriesResponse.json();\r\n        categoriesResponseBody.forEach((category) => {\r\n          category.isChecked = true;\r\n        });\r\n        setCategories(categoriesResponseBody);\r\n\r\n        //Fetch Products from DB\r\n        let productsResponse = await fetch(\r\n          `https://api.npoint.io/2210873b5c32eb592634/products?productName_like=${search}`,\r\n          { method: \"GET\" }\r\n        );\r\n\r\n        if (productsResponse.ok) {\r\n          let productsResponseBody = await productsResponse.json();\r\n\r\n          if (productsResponseBody) {\r\n            productsResponseBody.forEach((product) => {\r\n              product.brand = getBrandByBrandId(\r\n                brandsResponseBody,\r\n                product.brandId\r\n              );\r\n              product.category = getCategoryByCategoryId(\r\n                categoriesResponseBody,\r\n                product.categoryId\r\n              );\r\n              product.isOrdered = false;\r\n            });\r\n            setProducts(productsResponseBody);\r\n            setProductsToShow(productsResponseBody);\r\n            console.log(\"products are\", products);\r\n          }\r\n        }\r\n      })(),\r\n    [\r\n      search,\r\n      fetchBrands,\r\n      fetchCategories,\r\n      getBrandByBrandId,\r\n      getCategoryByCategoryId,\r\n    ]\r\n  );\r\n\r\n  //Update Products to show\r\n  let updateProductsToShow = () => {\r\n    console.log(\"categories are\", categories, brands);\r\n    setProductsToShow(\r\n      products\r\n        .filter((prod) => {\r\n          return (\r\n            categories.filter(\r\n              (category) =>\r\n                category.id === prod.categoryId && category.isChecked\r\n            ).length > 0\r\n          );\r\n        })\r\n        .filter((prod) => {\r\n          return (\r\n            brands.filter(\r\n              (brand) => brand.id === prod.brandId && brand.isChecked\r\n            ).length > 0\r\n          );\r\n        })\r\n    );\r\n  };\r\n\r\n  //If a Brand checkbox is checked\r\n  let updateBrandsIsChecked = (id) => {\r\n    let brandsData = brands.map((brd) => {\r\n      if (brd.id === id) brd.isChecked = !brd.isChecked;\r\n      return brd;\r\n    });\r\n    setBrands(brandsData);\r\n    updateProductsToShow();\r\n  };\r\n\r\n  //If a Category checkbox is checked\r\n  let updateCategoriesIsChecked = (id) => {\r\n    let categoriesData = categories.map((ctg) => {\r\n      if (ctg.id === id) ctg.isChecked = !ctg.isChecked;\r\n      return ctg;\r\n    });\r\n    setCategories(categoriesData);\r\n    updateProductsToShow();\r\n  };\r\n\r\n  //If a new item is added to cart\r\n  let onAddItemToCartClick = (prod) => {\r\n    (async () => {\r\n      let newOrder = {\r\n        userId: userContext.user.currentUserId,\r\n        productId: prod.id,\r\n        quantity: 1,\r\n        isPaymentComplete: false,\r\n      };\r\n      let orderResponse = await fetch(`http://localhost:5000/orders`, {\r\n        method: \"POST\",\r\n        body: JSON.stringify(newOrder),\r\n        headers: { \"Content-Type\": \"application/json\" },\r\n      });\r\n      if (orderResponse.ok) {\r\n        let orderResponseBody = await orderResponse.json();\r\n\r\n        let prods = products.map((p) => {\r\n          if (p.id === prod.id) p.isOrdered = true;\r\n          return p;\r\n        });\r\n        setProducts(prods);\r\n      }\r\n    })();\r\n  };\r\n\r\n  return (\r\n    <div>\r\n      <div className=\"row py-3 header\">\r\n        <div className=\"col-lg-3\">\r\n          <h4>\r\n            <i className=\"fa fa-shopping-bag\"></i> Store\r\n            <span className=\"badge bg-warning ms-3\">\r\n              {productsToShow && productsToShow.length} Results\r\n            </span>\r\n          </h4>\r\n        </div>\r\n        <div className=\"col-lg-9\">\r\n          <input\r\n            type=\"text\"\r\n            value={search}\r\n            placeholder=\"Search...\"\r\n            className=\"form-control\"\r\n            autoFocus=\"autofocus\"\r\n            onChange={(e) => {\r\n              setSearch(e.target.value);\r\n            }}\r\n          />\r\n        </div>\r\n      </div>\r\n\r\n      <div className=\"row\">\r\n        <div className=\"col-lg-3 py-2\">\r\n          <div className=\"my-2\">\r\n            <h5>Brands</h5>\r\n            <ul className=\"list-group list-group-flush\">\r\n              {brands &&\r\n                brands.map((brand) => {\r\n                  return (\r\n                    <div key={brand.id}>\r\n                      <li className=\"list-group-item\" key={brand.id}>\r\n                        <div className=\"form-check\">\r\n                          <input\r\n                            type=\"checkbox\"\r\n                            className=\"form-check-input\"\r\n                            value=\"true\"\r\n                            checked={brand.isChecked}\r\n                            onChange={() => {\r\n                              updateBrandsIsChecked(brand.id);\r\n                            }}\r\n                            id={`brand${brand.id}`}\r\n                          />\r\n                          <label\r\n                            className=\"form-check-label\"\r\n                            htmlFor={`brand${brand.id}`}\r\n                          >\r\n                            {brand.brandName}\r\n                          </label>\r\n                        </div>\r\n                      </li>\r\n                    </div>\r\n                  );\r\n                })}\r\n            </ul>\r\n          </div>\r\n          <div className=\"my-2\">\r\n            <h5>Categories</h5>\r\n            <ul className=\"list-group list-group-flush\">\r\n              {categories &&\r\n                categories.map((category) => {\r\n                  return (\r\n                    <div key={category.id}>\r\n                      <li className=\"list-group-item\" key={category.id}>\r\n                        <div className=\"form-check\">\r\n                          <input\r\n                            type=\"checkbox\"\r\n                            className=\"form-check-input\"\r\n                            value=\"true\"\r\n                            checked={category.isChecked}\r\n                            onChange={() => {\r\n                              updateCategoriesIsChecked(category.id);\r\n                            }}\r\n                            id={`brand${category.id}`}\r\n                          />\r\n                          <label\r\n                            className=\"form-check-label\"\r\n                            htmlFor={`brand${category.id}`}\r\n                          >\r\n                            {category.categoryName}\r\n                          </label>\r\n                        </div>\r\n                      </li>\r\n                    </div>\r\n                  );\r\n                })}\r\n            </ul>\r\n          </div>\r\n        </div>\r\n        <div className=\"col-lg-9 py-2\">\r\n          <div className=\"row\">\r\n            {productsToShow &&\r\n              productsToShow.map((prod) => {\r\n                return (\r\n                  <Product\r\n                    key={prod.id}\r\n                    product={prod}\r\n                    onAddItemToCartClick={onAddItemToCartClick}\r\n                  />\r\n                );\r\n              })}\r\n          </div>\r\n        </div>\r\n      </div>\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default Store;\r\n","import React, { useState, useEffect } from \"react\";\r\nimport { OrdersService } from \"./Services\";\r\n\r\nconst ProductsPageAdmin = (props) => {\r\n  let [search, setSearch] = useState(\"\");\r\n  let [brands, setBrands] = useState(null);\r\n  let [categories, setCategories] = useState(null);\r\n  let [products, setProducts] = useState([]);\r\n  let [productsToShow, setProductsToShow] = useState([]);\r\n  let {\r\n    fetchProducts,\r\n    getBrandByBrandId,\r\n    getCategoryByCategoryId,\r\n    fetchBrands,\r\n    fetchCategories,\r\n  } = OrdersService;\r\n\r\n  useEffect(\r\n    () =>\r\n      (async () => {\r\n        //Fetch Brands From DB\r\n        let brandsResponse = await fetchBrands();\r\n        let brandsResponseBody = await brandsResponse.json();\r\n        brandsResponseBody.forEach((brand) => {\r\n          brand.isChecked = true;\r\n        });\r\n        setBrands(brandsResponseBody);\r\n        console.log(\"brands are\", brandsResponseBody);\r\n\r\n        //Fetch Categories from DB\r\n        let categoriesResponse = await fetchCategories();\r\n        let categoriesResponseBody = await categoriesResponse.json();\r\n        categoriesResponseBody.forEach((category) => {\r\n          category.isChecked = true;\r\n        });\r\n        setCategories(categoriesResponseBody);\r\n\r\n        //Fetch Products from DB\r\n        let productsResponse = await fetch(\r\n          `https://api.npoint.io/2210873b5c32eb592634/products?productName_like=${search}`,\r\n          { method: \"GET\" }\r\n        );\r\n\r\n        if (productsResponse.ok) {\r\n          let productsResponseBody = await productsResponse.json();\r\n\r\n          if (productsResponseBody) {\r\n            productsResponseBody.forEach((product) => {\r\n              product.brand = getBrandByBrandId(\r\n                brandsResponseBody,\r\n                product.brandId\r\n              );\r\n              product.category = getCategoryByCategoryId(\r\n                categoriesResponseBody,\r\n                product.categoryId\r\n              );\r\n              product.isOrdered = false;\r\n            });\r\n            setProducts(productsResponseBody);\r\n            setProductsToShow(productsResponseBody);\r\n            console.log(\"products are\", products);\r\n          }\r\n        }\r\n      })(),\r\n    [search]\r\n  );\r\n  return (\r\n    <div className=\"row\">\r\n      <div className=\"col-12\">\r\n        <div className=\"row p-3 header bg-light\">\r\n          <div className=\"col-lg-3\">\r\n            <h4>\r\n              <i className=\"fa fa-suitcase\"></i>&nbsp; Products&nbsp;\r\n              <span className=\"badge bg-secondary\">{products.length}</span>\r\n            </h4>\r\n          </div>\r\n          <div className=\"col-lg-9\">\r\n            <input\r\n              type=\"text\"\r\n              value={search}\r\n              placeholder=\"Search...\"\r\n              autoFocus=\"autofocus\"\r\n              className=\"form-control\"\r\n              onChange={(e) => setSearch(e.target.value)}\r\n            />\r\n          </div>\r\n        </div>\r\n      </div>\r\n      <div className=\"col-lg-10 mx-auto mb-2\">\r\n        <div className=\"card my-2 shadow\">\r\n          <table className=\"table\">\r\n            <thead>\r\n              <tr>\r\n                <th>#</th>\r\n                <th>Product Name</th>\r\n                <th>Price</th>\r\n                <th>Brand</th>\r\n                <th>Category</th>\r\n                <th>Rating</th>\r\n              </tr>\r\n            </thead>\r\n\r\n            <tbody>\r\n              {productsToShow.map((product) => {\r\n                return (\r\n                  <tr key={product.id}>\r\n                    <td>{product.id}</td>\r\n                    <td>{product.productName}</td>\r\n                    <td>${product.price}</td>\r\n                    <td>{product.brand.brandName}</td>\r\n                    <td>{product.category.categoryName}</td>\r\n                    <td>\r\n                      {[...Array(product.rating).keys()].map((n) => {\r\n                        return (\r\n                          <i className=\"fa fa-star text-warning\" key={n}></i>\r\n                        );\r\n                      })}\r\n                      {[...Array(5 - product.rating).keys()].map((n) => {\r\n                        return (\r\n                          <i className=\"fa fa-star-o text-warning\" key={n}></i>\r\n                        );\r\n                      })}\r\n                    </td>\r\n                  </tr>\r\n                );\r\n              })}\r\n            </tbody>\r\n          </table>\r\n        </div>\r\n      </div>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default ProductsPageAdmin;\r\n","import \"./App.css\";\nimport React, { useState } from \"react\";\nimport Login from \"./Login\";\nimport Register from \"./Register\";\nimport NoMatchPage from \"./NoMatchPage\";\nimport Dashboard from \"./Dashboard\";\nimport { HashRouter } from \"react-router-dom\";\nimport { Route, Switch } from \"react-router\";\nimport NavbarTop from \"./NavbarTop\";\nimport { UserContext } from \"./UserContext\";\nimport Store from \"./Store\";\nimport ProductsPageAdmin from \"./ProductsPageAdmin\";\n\nfunction App() {\n  let [user, setUser] = useState({\n    isLoggedIn: false,\n    currentUserId: null,\n    currentUserName: null,\n    currentUserOrders: 0,\n    currentUserRole: null,\n  });\n  return (\n    <UserContext.Provider value={{ user, setUser }}>\n      <HashRouter>\n        <NavbarTop />\n        <div className=\"container-fluid\">\n          <Switch>\n            <Route path=\"/\" exact={true} component={Login} />\n            <Route path=\"/dashboard\" component={Dashboard} />\n            <Route path=\"/register\" component={Register} />\n            <Route path=\"/store\" component={Store} />\n            <Route path=\"/products\" component={ProductsPageAdmin} />\n            <Route path=\"*\" component={NoMatchPage} />\n          </Switch>\n        </div>\n      </HashRouter>\n    </UserContext.Provider>\n  );\n}\n\nexport default App;\n","import React from \"react\";\nimport ReactDOM from \"react-dom\";\nimport App from \"./App\";\n\nimport \"jquery\";\nimport \"popper.js/dist/umd/popper\";\nimport \"bootstrap/dist/js/bootstrap\";\nimport \"bootstrap/dist/css/bootstrap.min.css\";\nimport \"font-awesome/css/font-awesome.css\";\nimport \"./index.css\";\n\nReactDOM.render(<App />, document.getElementById(\"root\"));\n"],"sourceRoot":""}